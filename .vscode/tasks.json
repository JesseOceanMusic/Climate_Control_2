{
  "version": "2.0.0",
  "tasks":
  [
    {
      "label": "C/C++: Build Project (GCC)",
      "type": "shell",
      "command": "C:\\msys64\\ucrt64\\bin\\gcc.exe",
      "args": [
        "-fdiagnostics-color=always",            
        "-g",                      // включить отладочную информацию в выходной исполняемый файл.
        
        "-Wall",                   // включает все распространенные предупреждения (warnings),
                                   // которые компилятор GCC может обнаружить.
                                   // Эти предупреждения часто указывают на потенциальные ошибки, сомнительные
                                   // конструкции или неоптимальный код. По сути, это уже форма статического анализа.

        "-Wextra",                 // включает дополнительные предупреждения, которые не охватываются W-all. 
                                   // Он еще больше расширяет объем статического анализа, выполняемого компилятором.

        "-Werror",                 // превращает все предупреждения в ошибки. Это очень строгий, но эффективный подход,
                                   // который заставляет вас исправлять каждую потенциальную проблему, обнаруженную компилятором,
                                   // прежде чем код сможет скомпилироваться.
        // 0_core
          // j_errors
            "-I${workspaceFolder}/firmware/0_core/j_errors/include",
              "${workspaceFolder}/firmware/0_core/j_errors/src/j_errors.c",
              "${workspaceFolder}/firmware/0_core/j_errors/test/j_errors_test.c",
              //"${workspaceFolder}/firmware/0_core/j_errors/example/j_errors_example.c",

        // 1_libs
          // j_buffer
            "-I${workspaceFolder}/firmware/1_libs/j_buffer/include",
              "${workspaceFolder}/firmware/1_libs/j_buffer/src/j_buffer.c",
              "${workspaceFolder}/firmware/1_libs/j_buffer/test/j_buffer_test.c",
              //"${workspaceFolder}/firmware/1_libs/j_buffer/example/j_buffer_example.c",

        // 2_services
          // j_errors_writer
            "-I${workspaceFolder}/firmware/2_services/j_errors_writer/include",
              "${workspaceFolder}/firmware/2_services/j_errors_writer/src/j_errors_writer.c",
              "${workspaceFolder}/firmware/2_services/j_errors_writer/test/j_errors_writer_test.c",
             //"${workspaceFolder}/firmware/2_services/j_errors_writer/example/j_errors_writer_example.c",

        // 3_managers

        // 4_application
          "-I${workspaceFolder}/firmware/4_application/include",
            "${workspaceFolder}/firmware/4_application/test/run_all_tests.c",

        "-o",                      // Этот флаг используется для указания имени выходного файла, который будет создан компилятором.
                                   // После "-o" указывается имя файла.

        "${workspaceFolder}/bin/${fileBasenameNoExtension}.exe"
      ],
      "options": {
        "cwd": "${workspaceFolder}/bin"
      },
      "problemMatcher": [
        "$gcc"
      ],
      "group": "build"
    }
  ]
}